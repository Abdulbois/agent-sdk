#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

name: "agent-sdk ci"

env:
  GO_VERSION: 1.17

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Checks:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run checks
        run: |
          echo $PATH
          go env
          echo ${{ github.workspace }}
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make checks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  UnitTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run unit test
        run: make unit-test
      - name: Upload coverage to Codecov
        run: |
          bash <(curl https://codecov.io/bash)
        env:
          CODECOV_UPLOAD_TOKEN: ${{ secrets.CODECOV_UPLOAD_TOKEN }}

  UnitTestWASM:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run WASM unit test
        run: make unit-test-wasm

  AgentRestAPTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run agent REST API tests (docker)
        run: |
          make rest-api-bdd

  AgentJSTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run agent JS tests (npm)
        run: |
          source ci/version_var.sh
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          export npm_config_prefix=~/.npm-prefix
          echo '127.0.0.1 static-file-server-js' | sudo tee -a /etc/hosts
          make aries-js-bdd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  WalletSDKTest:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run wallet SDK JS tests (npm)
        run: |
          source ci/version_var.sh
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          echo '//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          export npm_config_prefix=~/.npm-prefix
          echo '127.0.0.1 static-file-server-js' | sudo tee -a /etc/hosts
          make wallet-sdk-tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Publish:
    needs: [Checks, UnitTest, UnitTestWasm, AgentJSTest, WalletSDKTest, AgentRestAPTest]
    if: github.event_name == 'push' && (github.repository == 'trustbloc/agent-sdk' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - run: |
          function logout {
            docker logout
          }
          trap logout EXIT
          git lfs install
          git lfs pull

          source ci/version_var.sh
          echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USER --password-stdin
          echo '//npm.pkg.github.com/:_authToken=${DOCKER_PASSWORD}' > ~/.npmrc
          echo '@hyperledger:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc-cicd:registry=https://npm.pkg.github.com' >> ~/.npmrc
          echo '@trustbloc:registry=https://npm.pkg.github.com' >> ~/.npmrc
          make agent-server-docker
          docker tag ghcr.io/trustbloc/agent-sdk-server:latest ${AGENT_SDK_PKG}:${AGENT_SDK_TAG}
          docker push ${AGENT_SDK_PKG}:${AGENT_SDK_TAG}

          cd ./cmd/agent-js-worker
          sed -i 's/"version": "0.1.0"/"version": "'$NPM_PKG_TAG'"/g' package.json
          sed -i 's#"name": "@trustbloc/agent-sdk-web"#"name": "@'${NPM_AGENT_PKG_NAME}'"#g' package.json
          sed -i 's#"url": "git://github.com/trustbloc/agent-sdk.git"#"url": "git://github.com/'${NPM_PKG_REPO}'.git"#g' package.json
          npm install
          npm publish

          cd ../wallet-js-sdk
          sed -i 's/"version": "0.1.0"/"version": "'$NPM_PKG_TAG'"/g' package.json
          sed -i 's#"name": "@trustbloc/wallet-sdk"#"name": "@'${NPM_SDK_PKG_NAME}'"#g' package.json
          sed -i 's#"url": "git://github.com/trustbloc/agent-sdk.git"#"url": "git://github.com/'${NPM_PKG_REPO}'.git"#g' package.json
          npm install
          npm publish

        env:
          DOCKER_USER: ${{ secrets.CR_USER }}
          DOCKER_PASSWORD: ${{ secrets.CR_PAT }}
          NPM_PKG_TAG: $(NPM_PKG_TAG)
          NPM_AGENT_PKG_NAME: $(NPM_AGENT_PKG_NAME)
          NPM_SDK_PKG_NAME: $(NPM_SDK_PKG_NAME)
          NPM_PKG_REPO: $(NPM_PKG_REPO)
